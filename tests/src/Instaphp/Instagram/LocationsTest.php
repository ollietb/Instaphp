<?php

/*
 * The MIT License (MIT)
 * Copyright © 2013 Randy Sesser <randy@instaphp.com>
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the “Software”), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * @author Randy Sesser <randy@instaphp.com>
 * @filesource
 */

namespace Instaphp\Instagram;

include_once 'InstagramTest.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-22 at 20:16:55.
 *
 * @ignore
 */
class LocationsTest extends InstagramTest
{
    /**
     * @var Locations
     */
    protected $object;

    /**
     * @deprecated
     *
     * @var string
     */
    protected $foursquarev2id = '4e239487d4c0d32591045a8e';

    /**
     * @var string
     */
    protected $facebookPlacesId = '165461756803348';

    protected $location_id = '3143441';

    protected $lat = '37.78776';
    protected $lng = '-122.489556';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Locations($this->config);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testInstanceOf()
    {
        $this->assertInstanceOf('\Instaphp\Instagram\Instagram', $this->object);
        $this->assertInstanceOf('\Instaphp\Instagram\Locations', $this->object);
    }

    /**
     * @covers Instaphp\Instagram\Locations::Info
     */
    public function testInfo()
    {
        $res = $this->object->Info($this->location_id);
        $this->assertInstanceOf('\Instaphp\Instagram\Response', $res);
        $this->assertNotEmpty($res->data);
        $this->assertGreaterThan(0, count($res->data));
        $this->assertSame('Green Flash Brewing Co.', $res->data['name']);
    }

    /**
     * @covers Instaphp\Instagram\Locations::Recent
     */
    public function testRecent()
    {
        $res = $this->object->Recent($this->location_id, ['count' => 10]);
        $this->assertInstanceOf('\Instaphp\Instagram\Response', $res);
        $this->assertNotEmpty($res->data);
        $this->assertGreaterThan(0, count($res->data));
        $this->assertNotEmpty($res->pagination);
    }

    /**
     * @covers Instaphp\Instagram\Locations::Search
     */
    public function testSearch()
    {
        $res = $this->object->Search(['count' => 10, 'facebook_places_id' => $this->facebookPlacesId]);
        $this->assertInstanceOf('\Instaphp\Instagram\Response', $res);
        $this->assertNotEmpty($res->data);
        $res = $this->object->Search(['lat' => $this->lat, 'lng' => $this->lng]);
        $this->assertInstanceOf('\Instaphp\Instagram\Response', $res);
        $this->assertNotEmpty($res->data);
    }
}
