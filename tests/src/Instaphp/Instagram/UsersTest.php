<?php

/*
 * The MIT License (MIT)
 * Copyright © 2013 Randy Sesser <randy@instaphp.com>
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the “Software”), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * @author Randy Sesser <randy@instaphp.com>
 * @filesource
 */

namespace Instaphp\Instagram;

include_once 'InstagramTest.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-22 at 10:28:11.
 *
 * @ignore
 */
class UsersTest extends InstagramTest
{
    /**
     * @var Users
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Users($this->config);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Instaphp\Instagram\Users::FindId
     */
    public function testFindId()
    {
        $res = $this->object->FindId('sesser');
        $this->assertSame(5830, $res);
    }

    /**
     * @covers Instaphp\Instagram\Users::Info
     */
    public function testInfo()
    {
        $res = $this->object->Info(3740103);
        $this->assertSame(200, $res->meta['code']);
        $this->assertSame('bowkylion', $res->data['username']);
    }

    /**
     * @covers Instaphp\Instagram\Users::Recent
     */
    public function testRecent()
    {
        $this->object->SetAccessToken(TEST_ACCESS_TOKEN);
        $res = $this->object->Recent(5830, ['count' => 5]);
        $this->assertNotEmpty($res->data);
        $this->assertSame(200, $res->meta['code']);
        $this->assertSame(5, count($res->data));
    }

    /**
     * @covers Instaphp\Instagram\Users::Liked
     * @expectedException \Instaphp\Exceptions\OAuthParameterException
     */
    public function testLikedException()
    {
        if (TEST_LIKES === false) {
            $this->markTestSkipped('Likes not tested');
        }
        $this->object->Liked();
    }

    /**
     * @covers Instaphp\Instagram\Users::Liked
     */
    public function testLiked()
    {
        if (TEST_LIKES === false) {
            $this->markTestSkipped('Likes not tested');
        }
        $this->object->SetAccessToken(TEST_ACCESS_TOKEN);
        $res = $this->object->Liked(['count' => 1]);
        $this->assertNotEmpty($res->data);
        $this->assertSame(200, $res->meta['code']);
        $this->assertSame(1, count($res->data));
    }

    /**
     * @covers Instaphp\Instagram\Users::Search
     *
     * @todo   Implement testSearch().
     */
    public function testSearch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Follows
     *
     * @todo   Implement testFollows().
     */
    public function testFollows()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::FollowedBy
     *
     * @todo   Implement testFollowedBy().
     */
    public function testFollowedBy()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Requests
     *
     * @todo   Implement testRequests().
     */
    public function testRequests()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Relationship
     *
     * @todo   Implement testRelationship().
     */
    public function testRelationship()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Follow
     *
     * @todo   Implement testFollow().
     */
    public function testFollow()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Unfollow
     *
     * @todo   Implement testUnfollow().
     */
    public function testUnfollow()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Block
     *
     * @todo   Implement testBlock().
     */
    public function testBlock()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Unblock
     *
     * @todo   Implement testUnblock().
     */
    public function testUnblock()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Approve
     *
     * @todo   Implement testApprove().
     */
    public function testApprove()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Deny
     *
     * @todo   Implement testDeny().
     */
    public function testDeny()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
